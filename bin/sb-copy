#!/usr/bin/env bash

TEXT_GREEN=$(tput setaf 2)
TEXT_RED=$(tput setaf 1)
TEXT_RESET=$(tput sgr0)

DEBUG=${DDEV_HELPERS_DEBUG:-0}

debug_echo() {
  if [[ $DEBUG == 1 ]]; then
    echo "$@"
  fi
}

sourceDir="../files"
targetDir="../.."

type=${1:-general}
mainDirWithType=$sourceDir/$type

if [[ ! -e $mainDirWithType ]]; then
    echo "${TEXT_RED}No folder named '$mainDirWithType'${TEXT_RESET}"
    echo
    exit 1
fi
debug_echo "${TEXT_GREEN}Coping ddev-helpers commands for type '${type}'${TEXT_RESET}"
find "$mainDirWithType" -type f -print0 |
    while IFS= read -r -d '' sourceFile; do
        copy=0
        targetFile="${sourceFile/$mainDirWithType/}"
        targetDirWithType="${targetDir}$(dirname "$targetFile")"

        if grep -q -e "#sb-generated-deleted" "$sourceFile" ; then
          if [[ -e "$targetDir$targetFile" ]]; then
            debug_echo "- ${TEXT_RED}rm ${targetDirWithType} as ${sourceFile} has #sb-generated-deleted${TEXT_RESET}"
            rm "$targetDir$targetFile"
          fi
          continue
        fi;

        if [[ ! -e $targetDir$targetFile ]]; then
          debug_echo "- ${TEXT_GREEN}copy ${sourceFile} to ${targetDirWithType} (target file does not yet exist - first copy)${TEXT_RESET}"
          copy=1
        elif grep -q -e "#sb-generated" -e "#ddev-generated" "$targetDir$targetFile" ; then
          debug_echo "- ${TEXT_GREEN}copy ${sourceFile} to ${targetDirWithType} (target exists but is sb-generated so can be updated)${TEXT_RESET}"
          copy=1
        fi

        if [[ $copy == 1 ]]; then
            mkdir -p "$targetDirWithType"
            cp "$sourceFile" "$targetDirWithType"
        fi
    done
